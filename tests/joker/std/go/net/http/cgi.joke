;;;; Auto-generated by gostd2joker at (omitted for testing), do not edit!!

(ns
  ^{:go-imports []
    :doc "Provides a low-level interface to the net/http/cgi package."
    :empty true}
  go.net.http.cgi)

;; (defn Request
;;   "Request returns the HTTP request as represented in the current\nenvironment. This assumes the current program is being run\nby a web server in a CGI environment.\nThe returned Request's Body is populated, if applicable.\n\nGo return type: (*..., error)\n\nJoker return type: [ABEND883(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/http/cgi/child.go:29:18) Error]"
;;   {:added "1.0"
;;    :go "request()"}
;;   [])

;; (defn RequestFromMap
;;   "RequestFromMap creates an http.Request from CGI variables.\nThe returned Request's Body field is not populated.\n\nGo return type: (*..., error)\n\nJoker return type: [ABEND883(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/http/cgi/child.go:52:49) Error]"
;;   {:added "1.0"
;;    :go "requestFromMap(params)"}
;;   [^ABEND881(unrecognized Expr type *ast.MapType at: tests/big/src/net/http/cgi/child.go:52:28) params])

;; (defn ^Error Serve
;;   "Serve executes the provided Handler on the currently active CGI\nrequest, if any. If there's no current CGI environment\nan error is returned. The provided handler may be nil to use\nhttp.DefaultServeMux.\n\nGo return type: error\n\nJoker return type: Error"
;;   {:added "1.0"
;;    :go "cgi.Serve(handler)"}
;;   [^ABEND881(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/http/cgi/child.go:146:20) handler])
