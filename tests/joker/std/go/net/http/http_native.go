// Auto-generated by gostd2joker at (omitted for testing), do not edit!!

package http

import (
	_http "net/http"
	. "github.com/candid82/joker/core"
)

// func error(w ABEND884(unrecognized type ResponseWriter at: tests/big/src/net/http/server.go:1973:14), error string, code int) Object {
// 	_http.Error(w, error, code)
// 	...ABEND675: TODO...
// }

// func fileServer(root ABEND884(unrecognized type FileSystem at: tests/big/src/net/http/fs.go:713:22)) Object {
// 	return _http.FileServer(root)
// }

// func get(url string) Object {
// 	resp, err := _http.Get(url)
// 	res := EmptyVector
// 	map1 := EmptyArrayMap()
// 	map1.Add(MakeKeyword("Status"), MakeString((*resp).Status))
// 	map1.Add(MakeKeyword("StatusCode"), MakeInt(int((*resp).StatusCode)))
// 	map1.Add(MakeKeyword("Proto"), MakeString((*resp).Proto))
// 	map1.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*resp).ProtoMajor)))
// 	map1.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*resp).ProtoMinor)))
// 	map1.Add(MakeKeyword("Header"), (*resp).Header)
// 	map1.Add(MakeKeyword("Body"), (*resp).Body)
// 	map1.Add(MakeKeyword("ContentLength"), MakeInt(int((*resp).ContentLength)))
// 	vec2 := EmptyVector
// 	for _, elem2 := range (*resp).TransferEncoding {
// 		vec2 = vec2.Conjoin(MakeString(elem2))
// 	}
// 	map1.Add(MakeKeyword("TransferEncoding"), vec2)
// 	map1.Add(MakeKeyword("Close"), MakeBool((*resp).Close))
// 	map1.Add(MakeKeyword("Uncompressed"), MakeBool((*resp).Uncompressed))
// 	map1.Add(MakeKeyword("Trailer"), (*resp).Trailer)
// 	map3 := EmptyArrayMap()
// 	map3.Add(MakeKeyword("Method"), MakeString((*(*resp).Request).Method))
// 	map3.Add(MakeKeyword("URL"), (*(*(*resp).Request).URL))
// 	map3.Add(MakeKeyword("Proto"), MakeString((*(*resp).Request).Proto))
// 	map3.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*(*resp).Request).ProtoMajor)))
// 	map3.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*(*resp).Request).ProtoMinor)))
// 	map3.Add(MakeKeyword("Header"), (*(*resp).Request).Header)
// 	map3.Add(MakeKeyword("Body"), (*(*resp).Request).Body)
// 	map3.Add(MakeKeyword("GetBody"), (*(*resp).Request).GetBody)
// 	map3.Add(MakeKeyword("ContentLength"), MakeInt(int((*(*resp).Request).ContentLength)))
// 	vec4 := EmptyVector
// 	for _, elem4 := range (*(*resp).Request).TransferEncoding {
// 		vec4 = vec4.Conjoin(MakeString(elem4))
// 	}
// 	map3.Add(MakeKeyword("TransferEncoding"), vec4)
// 	map3.Add(MakeKeyword("Close"), MakeBool((*(*resp).Request).Close))
// 	map3.Add(MakeKeyword("Host"), MakeString((*(*resp).Request).Host))
// 	map3.Add(MakeKeyword("Form"), (*(*resp).Request).Form)
// 	map3.Add(MakeKeyword("PostForm"), (*(*resp).Request).PostForm)
// 	map3.Add(MakeKeyword("MultipartForm"), (*(*(*resp).Request).MultipartForm))
// 	map3.Add(MakeKeyword("Trailer"), (*(*resp).Request).Trailer)
// 	map3.Add(MakeKeyword("RemoteAddr"), MakeString((*(*resp).Request).RemoteAddr))
// 	map3.Add(MakeKeyword("RequestURI"), MakeString((*(*resp).Request).RequestURI))
// 	map3.Add(MakeKeyword("TLS"), (*(*(*resp).Request).TLS))
// 	map3.Add(MakeKeyword("Cancel"), (*(*resp).Request).Cancel)
// 	map3.Add(MakeKeyword("Response"), )
// 	map1.Add(MakeKeyword("Request"), map3)
// 	map1.Add(MakeKeyword("TLS"), (*(*resp).TLS))
// 	res = res.Conjoin(map1)
// 	res = res.Conjoin(func () Object { if (err) == nil { return NIL } else { return MakeError(err) } }())
// 	return res
// }

// func handle(pattern string, handler ABEND884(unrecognized type Handler at: tests/big/src/net/http/server.go:2401:37)) Object {
// 	_http.Handle(pattern, handler)
// 	...ABEND675: TODO...
// }

// func handleFunc(pattern string, handler ABEND882(unrecognized Expr type *ast.FuncType at: tests/big/src/net/http/server.go:2406:41)) Object {
// 	_http.HandleFunc(pattern, handler)
// 	...ABEND675: TODO...
// }

// func head(url string) Object {
// 	resp, err := _http.Head(url)
// 	res := EmptyVector
// 	map1 := EmptyArrayMap()
// 	map1.Add(MakeKeyword("Status"), MakeString((*resp).Status))
// 	map1.Add(MakeKeyword("StatusCode"), MakeInt(int((*resp).StatusCode)))
// 	map1.Add(MakeKeyword("Proto"), MakeString((*resp).Proto))
// 	map1.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*resp).ProtoMajor)))
// 	map1.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*resp).ProtoMinor)))
// 	map1.Add(MakeKeyword("Header"), (*resp).Header)
// 	map1.Add(MakeKeyword("Body"), (*resp).Body)
// 	map1.Add(MakeKeyword("ContentLength"), MakeInt(int((*resp).ContentLength)))
// 	vec2 := EmptyVector
// 	for _, elem2 := range (*resp).TransferEncoding {
// 		vec2 = vec2.Conjoin(MakeString(elem2))
// 	}
// 	map1.Add(MakeKeyword("TransferEncoding"), vec2)
// 	map1.Add(MakeKeyword("Close"), MakeBool((*resp).Close))
// 	map1.Add(MakeKeyword("Uncompressed"), MakeBool((*resp).Uncompressed))
// 	map1.Add(MakeKeyword("Trailer"), (*resp).Trailer)
// 	map3 := EmptyArrayMap()
// 	map3.Add(MakeKeyword("Method"), MakeString((*(*resp).Request).Method))
// 	map3.Add(MakeKeyword("URL"), (*(*(*resp).Request).URL))
// 	map3.Add(MakeKeyword("Proto"), MakeString((*(*resp).Request).Proto))
// 	map3.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*(*resp).Request).ProtoMajor)))
// 	map3.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*(*resp).Request).ProtoMinor)))
// 	map3.Add(MakeKeyword("Header"), (*(*resp).Request).Header)
// 	map3.Add(MakeKeyword("Body"), (*(*resp).Request).Body)
// 	map3.Add(MakeKeyword("GetBody"), (*(*resp).Request).GetBody)
// 	map3.Add(MakeKeyword("ContentLength"), MakeInt(int((*(*resp).Request).ContentLength)))
// 	vec4 := EmptyVector
// 	for _, elem4 := range (*(*resp).Request).TransferEncoding {
// 		vec4 = vec4.Conjoin(MakeString(elem4))
// 	}
// 	map3.Add(MakeKeyword("TransferEncoding"), vec4)
// 	map3.Add(MakeKeyword("Close"), MakeBool((*(*resp).Request).Close))
// 	map3.Add(MakeKeyword("Host"), MakeString((*(*resp).Request).Host))
// 	map3.Add(MakeKeyword("Form"), (*(*resp).Request).Form)
// 	map3.Add(MakeKeyword("PostForm"), (*(*resp).Request).PostForm)
// 	map3.Add(MakeKeyword("MultipartForm"), (*(*(*resp).Request).MultipartForm))
// 	map3.Add(MakeKeyword("Trailer"), (*(*resp).Request).Trailer)
// 	map3.Add(MakeKeyword("RemoteAddr"), MakeString((*(*resp).Request).RemoteAddr))
// 	map3.Add(MakeKeyword("RequestURI"), MakeString((*(*resp).Request).RequestURI))
// 	map3.Add(MakeKeyword("TLS"), (*(*(*resp).Request).TLS))
// 	map3.Add(MakeKeyword("Cancel"), (*(*resp).Request).Cancel)
// 	map3.Add(MakeKeyword("Response"), )
// 	map1.Add(MakeKeyword("Request"), map3)
// 	map1.Add(MakeKeyword("TLS"), (*(*resp).TLS))
// 	res = res.Conjoin(map1)
// 	res = res.Conjoin(func () Object { if (err) == nil { return NIL } else { return MakeError(err) } }())
// 	return res
// }

// func maxBytesReader(w ABEND884(unrecognized type ResponseWriter at: tests/big/src/net/http/request.go:1056:23), r ABEND882(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/http/request.go:1056:41), n int64) Object {
// 	return _http.MaxBytesReader(w, r, n)
// }

// func newFileTransport(fs ABEND884(unrecognized type FileSystem at: tests/big/src/net/http/filetransport.go:30:26)) Object {
// 	return _http.NewFileTransport(fs)
// }

// func newRequest(method string, url string, body ABEND882(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/http/request.go:792:42)) Object {
// 	res1, res2 := _http.NewRequest(method, url, body)
// 	res := EmptyVector
// 	map1 := EmptyArrayMap()
// 	map1.Add(MakeKeyword("Method"), MakeString((*res1).Method))
// 	map1.Add(MakeKeyword("URL"), (*(*res1).URL))
// 	map1.Add(MakeKeyword("Proto"), MakeString((*res1).Proto))
// 	map1.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*res1).ProtoMajor)))
// 	map1.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*res1).ProtoMinor)))
// 	map1.Add(MakeKeyword("Header"), (*res1).Header)
// 	map1.Add(MakeKeyword("Body"), (*res1).Body)
// 	map1.Add(MakeKeyword("GetBody"), (*res1).GetBody)
// 	map1.Add(MakeKeyword("ContentLength"), MakeInt(int((*res1).ContentLength)))
// 	vec2 := EmptyVector
// 	for _, elem2 := range (*res1).TransferEncoding {
// 		vec2 = vec2.Conjoin(MakeString(elem2))
// 	}
// 	map1.Add(MakeKeyword("TransferEncoding"), vec2)
// 	map1.Add(MakeKeyword("Close"), MakeBool((*res1).Close))
// 	map1.Add(MakeKeyword("Host"), MakeString((*res1).Host))
// 	map1.Add(MakeKeyword("Form"), (*res1).Form)
// 	map1.Add(MakeKeyword("PostForm"), (*res1).PostForm)
// 	map1.Add(MakeKeyword("MultipartForm"), (*(*res1).MultipartForm))
// 	map1.Add(MakeKeyword("Trailer"), (*res1).Trailer)
// 	map1.Add(MakeKeyword("RemoteAddr"), MakeString((*res1).RemoteAddr))
// 	map1.Add(MakeKeyword("RequestURI"), MakeString((*res1).RequestURI))
// 	map1.Add(MakeKeyword("TLS"), (*(*res1).TLS))
// 	map1.Add(MakeKeyword("Cancel"), (*res1).Cancel)
// 	map3 := EmptyArrayMap()
// 	map3.Add(MakeKeyword("Status"), MakeString((*(*res1).Response).Status))
// 	map3.Add(MakeKeyword("StatusCode"), MakeInt(int((*(*res1).Response).StatusCode)))
// 	map3.Add(MakeKeyword("Proto"), MakeString((*(*res1).Response).Proto))
// 	map3.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*(*res1).Response).ProtoMajor)))
// 	map3.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*(*res1).Response).ProtoMinor)))
// 	map3.Add(MakeKeyword("Header"), (*(*res1).Response).Header)
// 	map3.Add(MakeKeyword("Body"), (*(*res1).Response).Body)
// 	map3.Add(MakeKeyword("ContentLength"), MakeInt(int((*(*res1).Response).ContentLength)))
// 	vec4 := EmptyVector
// 	for _, elem4 := range (*(*res1).Response).TransferEncoding {
// 		vec4 = vec4.Conjoin(MakeString(elem4))
// 	}
// 	map3.Add(MakeKeyword("TransferEncoding"), vec4)
// 	map3.Add(MakeKeyword("Close"), MakeBool((*(*res1).Response).Close))
// 	map3.Add(MakeKeyword("Uncompressed"), MakeBool((*(*res1).Response).Uncompressed))
// 	map3.Add(MakeKeyword("Trailer"), (*(*res1).Response).Trailer)
// 	map3.Add(MakeKeyword("Request"), )
// 	map3.Add(MakeKeyword("TLS"), (*(*(*res1).Response).TLS))
// 	map1.Add(MakeKeyword("Response"), map3)
// 	res = res.Conjoin(map1)
// 	res = res.Conjoin(func () Object { if (res2) == nil { return NIL } else { return MakeError(res2) } }())
// 	return res
// }

// func newServeMux() Object {
// 	return _http.NewServeMux()
// 	ABEND124(no public information returned)
// }

// func notFound(w ABEND884(unrecognized type ResponseWriter at: tests/big/src/net/http/server.go:1981:17), r ABEND882(unrecognized Expr type *ast.StarExpr at: tests/big/src/net/http/server.go:1981:35)) Object {
// 	_http.NotFound(w, r)
// 	...ABEND675: TODO...
// }

// func notFoundHandler() Object {
// 	return _http.NotFoundHandler()
// }

func parseHTTPVersion(vers string) Object {
	major, minor, ok := _http.ParseHTTPVersion(vers)
	res := EmptyVector
	res = res.Conjoin(MakeInt(int(major)))
	res = res.Conjoin(MakeInt(int(minor)))
	res = res.Conjoin(MakeBool(ok))
	return res
}

// func parseTime(text string) Object {
// 	t, err := _http.ParseTime(text)
// 	res := EmptyVector
// 	res = res.Conjoin(t)
// 	res = res.Conjoin(func () Object { if (err) == nil { return NIL } else { return MakeError(err) } }())
// 	return res
// }

// func post(url string, contentType string, body ABEND882(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/http/client.go:748:41)) Object {
// 	resp, err := _http.Post(url, contentType, body)
// 	res := EmptyVector
// 	map1 := EmptyArrayMap()
// 	map1.Add(MakeKeyword("Status"), MakeString((*resp).Status))
// 	map1.Add(MakeKeyword("StatusCode"), MakeInt(int((*resp).StatusCode)))
// 	map1.Add(MakeKeyword("Proto"), MakeString((*resp).Proto))
// 	map1.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*resp).ProtoMajor)))
// 	map1.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*resp).ProtoMinor)))
// 	map1.Add(MakeKeyword("Header"), (*resp).Header)
// 	map1.Add(MakeKeyword("Body"), (*resp).Body)
// 	map1.Add(MakeKeyword("ContentLength"), MakeInt(int((*resp).ContentLength)))
// 	vec2 := EmptyVector
// 	for _, elem2 := range (*resp).TransferEncoding {
// 		vec2 = vec2.Conjoin(MakeString(elem2))
// 	}
// 	map1.Add(MakeKeyword("TransferEncoding"), vec2)
// 	map1.Add(MakeKeyword("Close"), MakeBool((*resp).Close))
// 	map1.Add(MakeKeyword("Uncompressed"), MakeBool((*resp).Uncompressed))
// 	map1.Add(MakeKeyword("Trailer"), (*resp).Trailer)
// 	map3 := EmptyArrayMap()
// 	map3.Add(MakeKeyword("Method"), MakeString((*(*resp).Request).Method))
// 	map3.Add(MakeKeyword("URL"), (*(*(*resp).Request).URL))
// 	map3.Add(MakeKeyword("Proto"), MakeString((*(*resp).Request).Proto))
// 	map3.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*(*resp).Request).ProtoMajor)))
// 	map3.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*(*resp).Request).ProtoMinor)))
// 	map3.Add(MakeKeyword("Header"), (*(*resp).Request).Header)
// 	map3.Add(MakeKeyword("Body"), (*(*resp).Request).Body)
// 	map3.Add(MakeKeyword("GetBody"), (*(*resp).Request).GetBody)
// 	map3.Add(MakeKeyword("ContentLength"), MakeInt(int((*(*resp).Request).ContentLength)))
// 	vec4 := EmptyVector
// 	for _, elem4 := range (*(*resp).Request).TransferEncoding {
// 		vec4 = vec4.Conjoin(MakeString(elem4))
// 	}
// 	map3.Add(MakeKeyword("TransferEncoding"), vec4)
// 	map3.Add(MakeKeyword("Close"), MakeBool((*(*resp).Request).Close))
// 	map3.Add(MakeKeyword("Host"), MakeString((*(*resp).Request).Host))
// 	map3.Add(MakeKeyword("Form"), (*(*resp).Request).Form)
// 	map3.Add(MakeKeyword("PostForm"), (*(*resp).Request).PostForm)
// 	map3.Add(MakeKeyword("MultipartForm"), (*(*(*resp).Request).MultipartForm))
// 	map3.Add(MakeKeyword("Trailer"), (*(*resp).Request).Trailer)
// 	map3.Add(MakeKeyword("RemoteAddr"), MakeString((*(*resp).Request).RemoteAddr))
// 	map3.Add(MakeKeyword("RequestURI"), MakeString((*(*resp).Request).RequestURI))
// 	map3.Add(MakeKeyword("TLS"), (*(*(*resp).Request).TLS))
// 	map3.Add(MakeKeyword("Cancel"), (*(*resp).Request).Cancel)
// 	map3.Add(MakeKeyword("Response"), )
// 	map1.Add(MakeKeyword("Request"), map3)
// 	map1.Add(MakeKeyword("TLS"), (*(*resp).TLS))
// 	res = res.Conjoin(map1)
// 	res = res.Conjoin(func () Object { if (err) == nil { return NIL } else { return MakeError(err) } }())
// 	return res
// }

// func postForm(url string, data ABEND882(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/http/client.go:785:32)) Object {
// 	resp, err := _http.PostForm(url, data)
// 	res := EmptyVector
// 	map1 := EmptyArrayMap()
// 	map1.Add(MakeKeyword("Status"), MakeString((*resp).Status))
// 	map1.Add(MakeKeyword("StatusCode"), MakeInt(int((*resp).StatusCode)))
// 	map1.Add(MakeKeyword("Proto"), MakeString((*resp).Proto))
// 	map1.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*resp).ProtoMajor)))
// 	map1.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*resp).ProtoMinor)))
// 	map1.Add(MakeKeyword("Header"), (*resp).Header)
// 	map1.Add(MakeKeyword("Body"), (*resp).Body)
// 	map1.Add(MakeKeyword("ContentLength"), MakeInt(int((*resp).ContentLength)))
// 	vec2 := EmptyVector
// 	for _, elem2 := range (*resp).TransferEncoding {
// 		vec2 = vec2.Conjoin(MakeString(elem2))
// 	}
// 	map1.Add(MakeKeyword("TransferEncoding"), vec2)
// 	map1.Add(MakeKeyword("Close"), MakeBool((*resp).Close))
// 	map1.Add(MakeKeyword("Uncompressed"), MakeBool((*resp).Uncompressed))
// 	map1.Add(MakeKeyword("Trailer"), (*resp).Trailer)
// 	map3 := EmptyArrayMap()
// 	map3.Add(MakeKeyword("Method"), MakeString((*(*resp).Request).Method))
// 	map3.Add(MakeKeyword("URL"), (*(*(*resp).Request).URL))
// 	map3.Add(MakeKeyword("Proto"), MakeString((*(*resp).Request).Proto))
// 	map3.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*(*resp).Request).ProtoMajor)))
// 	map3.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*(*resp).Request).ProtoMinor)))
// 	map3.Add(MakeKeyword("Header"), (*(*resp).Request).Header)
// 	map3.Add(MakeKeyword("Body"), (*(*resp).Request).Body)
// 	map3.Add(MakeKeyword("GetBody"), (*(*resp).Request).GetBody)
// 	map3.Add(MakeKeyword("ContentLength"), MakeInt(int((*(*resp).Request).ContentLength)))
// 	vec4 := EmptyVector
// 	for _, elem4 := range (*(*resp).Request).TransferEncoding {
// 		vec4 = vec4.Conjoin(MakeString(elem4))
// 	}
// 	map3.Add(MakeKeyword("TransferEncoding"), vec4)
// 	map3.Add(MakeKeyword("Close"), MakeBool((*(*resp).Request).Close))
// 	map3.Add(MakeKeyword("Host"), MakeString((*(*resp).Request).Host))
// 	map3.Add(MakeKeyword("Form"), (*(*resp).Request).Form)
// 	map3.Add(MakeKeyword("PostForm"), (*(*resp).Request).PostForm)
// 	map3.Add(MakeKeyword("MultipartForm"), (*(*(*resp).Request).MultipartForm))
// 	map3.Add(MakeKeyword("Trailer"), (*(*resp).Request).Trailer)
// 	map3.Add(MakeKeyword("RemoteAddr"), MakeString((*(*resp).Request).RemoteAddr))
// 	map3.Add(MakeKeyword("RequestURI"), MakeString((*(*resp).Request).RequestURI))
// 	map3.Add(MakeKeyword("TLS"), (*(*(*resp).Request).TLS))
// 	map3.Add(MakeKeyword("Cancel"), (*(*resp).Request).Cancel)
// 	map3.Add(MakeKeyword("Response"), )
// 	map1.Add(MakeKeyword("Request"), map3)
// 	map1.Add(MakeKeyword("TLS"), (*(*resp).TLS))
// 	res = res.Conjoin(map1)
// 	res = res.Conjoin(func () Object { if (err) == nil { return NIL } else { return MakeError(err) } }())
// 	return res
// }

// func proxyFromEnvironment(req ABEND882(unrecognized Expr type *ast.StarExpr at: tests/big/src/net/http/transport.go:345:31)) Object {
// 	res1, res2 := _http.ProxyFromEnvironment(req)
// 	res := EmptyVector
// 	res = res.Conjoin((*res1))
// 	res = res.Conjoin(func () Object { if (res2) == nil { return NIL } else { return MakeError(res2) } }())
// 	return res
// }

// func proxyURL(fixedURL ABEND882(unrecognized Expr type *ast.StarExpr at: tests/big/src/net/http/transport.go:351:24)) Object {
// 	return _http.ProxyURL(fixedURL)
// }

// func readRequest(b ABEND882(unrecognized Expr type *ast.StarExpr at: tests/big/src/net/http/request.go:942:20)) Object {
// 	res1, res2 := _http.ReadRequest(b)
// 	res := EmptyVector
// 	map1 := EmptyArrayMap()
// 	map1.Add(MakeKeyword("Method"), MakeString((*res1).Method))
// 	map1.Add(MakeKeyword("URL"), (*(*res1).URL))
// 	map1.Add(MakeKeyword("Proto"), MakeString((*res1).Proto))
// 	map1.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*res1).ProtoMajor)))
// 	map1.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*res1).ProtoMinor)))
// 	map1.Add(MakeKeyword("Header"), (*res1).Header)
// 	map1.Add(MakeKeyword("Body"), (*res1).Body)
// 	map1.Add(MakeKeyword("GetBody"), (*res1).GetBody)
// 	map1.Add(MakeKeyword("ContentLength"), MakeInt(int((*res1).ContentLength)))
// 	vec2 := EmptyVector
// 	for _, elem2 := range (*res1).TransferEncoding {
// 		vec2 = vec2.Conjoin(MakeString(elem2))
// 	}
// 	map1.Add(MakeKeyword("TransferEncoding"), vec2)
// 	map1.Add(MakeKeyword("Close"), MakeBool((*res1).Close))
// 	map1.Add(MakeKeyword("Host"), MakeString((*res1).Host))
// 	map1.Add(MakeKeyword("Form"), (*res1).Form)
// 	map1.Add(MakeKeyword("PostForm"), (*res1).PostForm)
// 	map1.Add(MakeKeyword("MultipartForm"), (*(*res1).MultipartForm))
// 	map1.Add(MakeKeyword("Trailer"), (*res1).Trailer)
// 	map1.Add(MakeKeyword("RemoteAddr"), MakeString((*res1).RemoteAddr))
// 	map1.Add(MakeKeyword("RequestURI"), MakeString((*res1).RequestURI))
// 	map1.Add(MakeKeyword("TLS"), (*(*res1).TLS))
// 	map1.Add(MakeKeyword("Cancel"), (*res1).Cancel)
// 	map3 := EmptyArrayMap()
// 	map3.Add(MakeKeyword("Status"), MakeString((*(*res1).Response).Status))
// 	map3.Add(MakeKeyword("StatusCode"), MakeInt(int((*(*res1).Response).StatusCode)))
// 	map3.Add(MakeKeyword("Proto"), MakeString((*(*res1).Response).Proto))
// 	map3.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*(*res1).Response).ProtoMajor)))
// 	map3.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*(*res1).Response).ProtoMinor)))
// 	map3.Add(MakeKeyword("Header"), (*(*res1).Response).Header)
// 	map3.Add(MakeKeyword("Body"), (*(*res1).Response).Body)
// 	map3.Add(MakeKeyword("ContentLength"), MakeInt(int((*(*res1).Response).ContentLength)))
// 	vec4 := EmptyVector
// 	for _, elem4 := range (*(*res1).Response).TransferEncoding {
// 		vec4 = vec4.Conjoin(MakeString(elem4))
// 	}
// 	map3.Add(MakeKeyword("TransferEncoding"), vec4)
// 	map3.Add(MakeKeyword("Close"), MakeBool((*(*res1).Response).Close))
// 	map3.Add(MakeKeyword("Uncompressed"), MakeBool((*(*res1).Response).Uncompressed))
// 	map3.Add(MakeKeyword("Trailer"), (*(*res1).Response).Trailer)
// 	map3.Add(MakeKeyword("Request"), )
// 	map3.Add(MakeKeyword("TLS"), (*(*(*res1).Response).TLS))
// 	map1.Add(MakeKeyword("Response"), map3)
// 	res = res.Conjoin(map1)
// 	res = res.Conjoin(func () Object { if (res2) == nil { return NIL } else { return MakeError(res2) } }())
// 	return res
// }

// func readResponse(r ABEND882(unrecognized Expr type *ast.StarExpr at: tests/big/src/net/http/response.go:148:21), req ABEND882(unrecognized Expr type *ast.StarExpr at: tests/big/src/net/http/response.go:148:40)) Object {
// 	res1, res2 := _http.ReadResponse(r, req)
// 	res := EmptyVector
// 	map1 := EmptyArrayMap()
// 	map1.Add(MakeKeyword("Status"), MakeString((*res1).Status))
// 	map1.Add(MakeKeyword("StatusCode"), MakeInt(int((*res1).StatusCode)))
// 	map1.Add(MakeKeyword("Proto"), MakeString((*res1).Proto))
// 	map1.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*res1).ProtoMajor)))
// 	map1.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*res1).ProtoMinor)))
// 	map1.Add(MakeKeyword("Header"), (*res1).Header)
// 	map1.Add(MakeKeyword("Body"), (*res1).Body)
// 	map1.Add(MakeKeyword("ContentLength"), MakeInt(int((*res1).ContentLength)))
// 	vec2 := EmptyVector
// 	for _, elem2 := range (*res1).TransferEncoding {
// 		vec2 = vec2.Conjoin(MakeString(elem2))
// 	}
// 	map1.Add(MakeKeyword("TransferEncoding"), vec2)
// 	map1.Add(MakeKeyword("Close"), MakeBool((*res1).Close))
// 	map1.Add(MakeKeyword("Uncompressed"), MakeBool((*res1).Uncompressed))
// 	map1.Add(MakeKeyword("Trailer"), (*res1).Trailer)
// 	map3 := EmptyArrayMap()
// 	map3.Add(MakeKeyword("Method"), MakeString((*(*res1).Request).Method))
// 	map3.Add(MakeKeyword("URL"), (*(*(*res1).Request).URL))
// 	map3.Add(MakeKeyword("Proto"), MakeString((*(*res1).Request).Proto))
// 	map3.Add(MakeKeyword("ProtoMajor"), MakeInt(int((*(*res1).Request).ProtoMajor)))
// 	map3.Add(MakeKeyword("ProtoMinor"), MakeInt(int((*(*res1).Request).ProtoMinor)))
// 	map3.Add(MakeKeyword("Header"), (*(*res1).Request).Header)
// 	map3.Add(MakeKeyword("Body"), (*(*res1).Request).Body)
// 	map3.Add(MakeKeyword("GetBody"), (*(*res1).Request).GetBody)
// 	map3.Add(MakeKeyword("ContentLength"), MakeInt(int((*(*res1).Request).ContentLength)))
// 	vec4 := EmptyVector
// 	for _, elem4 := range (*(*res1).Request).TransferEncoding {
// 		vec4 = vec4.Conjoin(MakeString(elem4))
// 	}
// 	map3.Add(MakeKeyword("TransferEncoding"), vec4)
// 	map3.Add(MakeKeyword("Close"), MakeBool((*(*res1).Request).Close))
// 	map3.Add(MakeKeyword("Host"), MakeString((*(*res1).Request).Host))
// 	map3.Add(MakeKeyword("Form"), (*(*res1).Request).Form)
// 	map3.Add(MakeKeyword("PostForm"), (*(*res1).Request).PostForm)
// 	map3.Add(MakeKeyword("MultipartForm"), (*(*(*res1).Request).MultipartForm))
// 	map3.Add(MakeKeyword("Trailer"), (*(*res1).Request).Trailer)
// 	map3.Add(MakeKeyword("RemoteAddr"), MakeString((*(*res1).Request).RemoteAddr))
// 	map3.Add(MakeKeyword("RequestURI"), MakeString((*(*res1).Request).RequestURI))
// 	map3.Add(MakeKeyword("TLS"), (*(*(*res1).Request).TLS))
// 	map3.Add(MakeKeyword("Cancel"), (*(*res1).Request).Cancel)
// 	map3.Add(MakeKeyword("Response"), )
// 	map1.Add(MakeKeyword("Request"), map3)
// 	map1.Add(MakeKeyword("TLS"), (*(*res1).TLS))
// 	res = res.Conjoin(map1)
// 	res = res.Conjoin(func () Object { if (res2) == nil { return NIL } else { return MakeError(res2) } }())
// 	return res
// }

// func redirect(w ABEND884(unrecognized type ResponseWriter at: tests/big/src/net/http/server.go:2020:17), r ABEND882(unrecognized Expr type *ast.StarExpr at: tests/big/src/net/http/server.go:2020:35), url string, code int) Object {
// 	_http.Redirect(w, r, url, code)
// 	...ABEND675: TODO...
// }

// func redirectHandler(url string, code int) Object {
// 	return _http.RedirectHandler(url, code)
// }

// func serveContent(w ABEND884(unrecognized type ResponseWriter at: tests/big/src/net/http/fs.go:151:21), req ABEND882(unrecognized Expr type *ast.StarExpr at: tests/big/src/net/http/fs.go:151:41), name string, modtime ABEND882(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/http/fs.go:151:72), content ABEND882(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/http/fs.go:151:91)) Object {
// 	_http.ServeContent(w, req, name, modtime, content)
// 	...ABEND675: TODO...
// }

// func serveFile(w ABEND884(unrecognized type ResponseWriter at: tests/big/src/net/http/fs.go:670:18), r ABEND882(unrecognized Expr type *ast.StarExpr at: tests/big/src/net/http/fs.go:670:36), name string) Object {
// 	_http.ServeFile(w, r, name)
// 	...ABEND675: TODO...
// }

// func setCookie(w ABEND884(unrecognized type ResponseWriter at: tests/big/src/net/http/cookie.go:157:18), cookie ABEND882(unrecognized Expr type *ast.StarExpr at: tests/big/src/net/http/cookie.go:157:41)) Object {
// 	_http.SetCookie(w, cookie)
// 	...ABEND675: TODO...
// }

// func stripPrefix(prefix string, h ABEND884(unrecognized type Handler at: tests/big/src/net/http/server.go:1992:35)) Object {
// 	return _http.StripPrefix(prefix, h)
// }

// func timeoutHandler(h ABEND884(unrecognized type Handler at: tests/big/src/net/http/server.go:3106:23), dt ABEND882(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/http/server.go:3106:35), msg string) Object {
// 	return _http.TimeoutHandler(h, dt, msg)
// }
