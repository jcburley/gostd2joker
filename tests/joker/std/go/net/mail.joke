;;;; Auto-generated by gostd2joker at (omitted for testing), do not edit!!

(ns
  ^{:go-imports []
    :doc "Provides a low-level interface to the net/mail package."
    :empty false}
  go.net.mail)

(defn ParseAddress
  "Parses a single RFC 5322 address, e.g. \"Barry Gibbs <bg@example.com>\"\n\nGo return type: (*Address, error)\n\nJoker return type: [{:Name ^String, :Address ^String} Error]"
  {:added "1.0"
   :go "parseAddress(_address)"}
  [^String _address])

(defn ParseAddressList
  "ParseAddressList parses the given string as a list of addresses.\n\nGo return type: ([]*Address, error)\n\nJoker return type: [(vector-of {:Name ^String, :Address ^String}) Error]"
  {:added "1.0"
   :go "parseAddressList(_list)"}
  [^String _list])

;; (defn ParseDate
;;   "ParseDate parses an RFC 5322 date string.\n\nGo return type: (..., error)\n\nJoker return type: [ABEND883(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/mail/message.go:95:30) Error]"
;;   {:added "1.0"
;;    :go "parseDate(_date)"}
;;   [^String _date])

;; (defn ReadMessage
;;   "ReadMessage reads a message from r.\nThe headers are parsed, and the body of the message will be available\nfor reading from msg.Body.\n\nGo return type: (msg *Message, err error)\n\nJoker return type: [{:Header ^ABEND883(unrecognized Expr type *ast.MapType at: tests/big/src/net/mail/message.go:106:13), :Body ^ABEND883(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/mail/message.go:46:9)} Error]"
;;   {:added "1.0"
;;    :go "readMessage(_r)"}
;;   [^ABEND881(unrecognized Expr type *ast.SelectorExpr at: tests\big\src\net\mail\message.go:52:20) _r])
