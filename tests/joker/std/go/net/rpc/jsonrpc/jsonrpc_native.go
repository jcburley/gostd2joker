// Auto-generated by gostd2joker at (omitted for testing), do not edit!!

package jsonrpc

import (
	jsonrpc "net/rpc/jsonrpc"
	. "github.com/candid82/joker/core"
)

// func dial(network string, address string) Object {
// 	res1, res2 := jsonrpc.Dial(network, address)
// 	res := EmptyVector
// 	res = res.Conjoin((*res1))
// 	res = res.Conjoin(func () Object { if (res2) == nil { return NIL } else { return MakeString(res2.Error()) } }())
// 	return res
// }

// func newClient(conn ABEND882(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/rpc/jsonrpc/client.go:113:21)) Object {
// 	return jsonrpc.NewClient(conn)
// }

// func newClientCodec(conn ABEND882(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/rpc/jsonrpc/client.go:37:26)) Object {
// 	return jsonrpc.NewClientCodec(conn)
// }

// func newServerCodec(conn ABEND882(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/rpc/jsonrpc/server.go:37:26)) Object {
// 	return jsonrpc.NewServerCodec(conn)
// }

// func serveConn(conn ABEND882(unrecognized Expr type *ast.SelectorExpr at: tests/big/src/net/rpc/jsonrpc/server.go:132:21)) Object {
// 	jsonrpc.ServeConn(conn)
// 	...ABEND675: TODO...
// }
